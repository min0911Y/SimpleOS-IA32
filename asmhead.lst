     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 00280000                              BOTPAK	EQU		0x00280000		; 加载bootpack
     5  = 00100000                              DSKCAC	EQU		0x00100000		; 磁盘缓存的位置
     6  = 00008000                              DSKCAC0	EQU		0x00008000		; 磁盘缓存的位置（实模式）
     7 00000000                                 
     8 00000000                                 ; BOOT_INFO相关
     9  = 00000FF0                              CYLS	EQU		0x0ff0			; 引导扇区设置
    10  = 00000FF1                              LEDS	EQU		0x0ff1
    11  = 00000FF2                              VMODE	EQU		0x0ff2			; 关于颜色的信息
    12  = 00000FF4                              SCRNX	EQU		0x0ff4			; 分辨率X
    13  = 00000FF6                              SCRNY	EQU		0x0ff6			; 分辨率Y
    14  = 00000FF8                              VRAM	EQU		0x0ff8			; 图像缓冲区的起始地址
    15 00000000                                 
    16                                          		ORG		0xc200			;  这个的程序要被装载的内存地址
    17 0000C200                                 
    18 0000C200                                 ; 画面モードを設定
    19 0000C200                                 ;mov cx,2000h
    20 0000C200                                 ;mov ah,01h
    21 0000C200                                 ;int 10h
    22 0000C200 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 屏幕的模式（参考C语言的引用）
    23 0000C205 C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
    24 0000C20B C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
    25 0000C211 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
    26 0000C21A                                 
    27 0000C21A                                 ; 通过BIOS获取指示灯状态
    28 0000C21A                                 
    29 0000C21A B4 02                           		MOV		AH,0x02
    30 0000C21C CD 16                           		INT		0x16 			; keyboard BIOS
    31 0000C21E A2 0FF1                         		MOV		[LEDS],AL
    32 0000C221                                 
    33 0000C221                                 ; 防止PIC接受所有中断
    34 0000C221                                 ;	AT兼容机的规范、PIC初始化
    35 0000C221                                 ;	然后之前在CLI不做任何事就挂起
    36 0000C221                                 ;	PIC在同意后初始化
    37 0000C221                                 
    38 0000C221 B0 FF                           		MOV		AL,0xff
    39 0000C223 E6 21                           		OUT		0x21,AL
    40 0000C225 90                              		NOP						; 不断执行OUT指令
    41 0000C226 E6 A1                           		OUT		0xa1,AL
    42 0000C228                                 
    43 0000C228 FA                              		CLI						; 进一步中断CPU
    44 0000C229                                 
    45 0000C229                                 ; 让CPU支持1M以上内存、设置A20GATE
    46 0000C229                                 
    47 0000C229 E8 00B0                         		CALL	waitkbdout
    48 0000C22C B0 D1                           		MOV		AL,0xd1
    49 0000C22E E6 64                           		OUT		0x64,AL
    50 0000C230 E8 00A9                         		CALL	waitkbdout
    51 0000C233 B0 DF                           		MOV		AL,0xdf			; enable A20
    52 0000C235 E6 60                           		OUT		0x60,AL
    53 0000C237 E8 00A2                         		CALL	waitkbdout
    54 0000C23A                                 
    55 0000C23A                                 ; 保护模式转换
    56 0000C23A                                 
    57 0000C23A                                 [INSTRSET "i486p"]				; 说明使用486指令
    58 0000C23A                                 
    59 0000C23A 0F 01 16 C31A                   		LGDT	[GDTR0]			; 设置临时GDT
    60 0000C23F 0F 20 C0                        		MOV		EAX,CR0
    61 0000C242 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; 使用bit31（禁用分页）
    62 0000C248 66 83 C8 01                     		OR		EAX,0x00000001	; bit0到1转换（保护模式过渡）
    63 0000C24C 0F 22 C0                        		MOV		CR0,EAX
    64 0000C24F EB 00                           		JMP		pipelineflush
    65 0000C251                                 pipelineflush:
    66 0000C251 B8 0008                         		MOV		AX,1*8			;  写32bit的段
    67 0000C254 8E D8                           		MOV		DS,AX
    68 0000C256 8E C0                           		MOV		ES,AX
    69 0000C258 8E E0                           		MOV		FS,AX
    70 0000C25A 8E E8                           		MOV		GS,AX
    71 0000C25C 8E D0                           		MOV		SS,AX
    72 0000C25E                                 
    73 0000C25E                                 ; bootpack传递
    74 0000C25E                                 
    75 0000C25E 66 BE 0000C320                  		MOV		ESI,bootpack	; 源
    76 0000C264 66 BF 00280000                  		MOV		EDI,BOTPAK		; 目标
    77 0000C26A 66 B9 00020000                  		MOV		ECX,512*1024/4
    78 0000C270 E8 0070                         		CALL	memcpy
    79 0000C273                                 
    80 0000C273                                 ; 传输磁盘数据
    81 0000C273                                 
    82 0000C273                                 ; 从引导区开始
    83 0000C273                                 
    84 0000C273                                 
    85 0000C273 66 BE 00007C00                  		MOV		ESI,0x7c00		; 源
    86 0000C279 66 BF 00100000                  		MOV		EDI,DSKCAC		; 目标
    87 0000C27F 66 B9 00000080                  		MOV		ECX,512/4
    88 0000C285 E8 005B                         		CALL	memcpy
    89 0000C288                                 
    90 0000C288                                 ; 剩余的全部
    91 0000C288                                 
    92 0000C288 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 源
    93 0000C28E 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 目标
    94 0000C294 66 B9 00000000                  		MOV		ECX,0
    95 0000C29A 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
    96 0000C29E 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; 除以4得到字节数
    97 0000C2A5 66 81 E9 00000080               		SUB		ECX,512/4		; IPL偏移量
    98 0000C2AC E8 0034                         		CALL	memcpy
    99 0000C2AF                                 
   100 0000C2AF                                 ; 由于还需要asmhead才能完成
   101 0000C2AF                                 ; 完成其余的bootpack任务
   102 0000C2AF                                 
   103 0000C2AF                                 ; bootpack启动
   104 0000C2AF                                 
   105 0000C2AF 66 BB 00280000                  		MOV		EBX,BOTPAK
   106 0000C2B5 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   107 0000C2BA 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   108 0000C2BE 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   109 0000C2C2 74 10                           		JZ		skip			; 传输完成
   110 0000C2C4 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 源
   111 0000C2C9 66 01 DE                        		ADD		ESI,EBX
   112 0000C2CC 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 目标
   113 0000C2D1 E8 000F                         		CALL	memcpy
   114 0000C2D4                                 skip:
   115 0000C2D4                                 
   116 0000C2D4 66 EA 0000001B 0010             		JMP  		DWORD 2*8:0x0000001b
   117 0000C2DC                                 
   118 0000C2DC                                 waitkbdout:
   119 0000C2DC E4 64                           		IN		 AL,0x64
   120 0000C2DE 24 02                           		AND		 AL,0x02
   121 0000C2E0 75 FA                           		JNZ		waitkbdout		; AND结果不为0跳转到waitkbdout
   122 0000C2E2 C3                              		RET
   123 0000C2E3                                 
   124 0000C2E3                                 memcpy:
   125 0000C2E3 67 66 8B 06                     		MOV		EAX,[ESI]
   126 0000C2E7 66 83 C6 04                     		ADD		ESI,4
   127 0000C2EB 67 66 89 07                     		MOV		[EDI],EAX
   128 0000C2EF 66 83 C7 04                     		ADD		EDI,4
   129 0000C2F3 66 83 E9 01                     		SUB		ECX,1
   130 0000C2F7 75 EA                           		JNZ		memcpy			; 运算结果不为0跳转到memcpy
   131 0000C2F9 C3                              		RET
   132 0000C2FA                                 ; memcpy地址前缀大小
   133 0000C2FA                                 
   134 0000C2FA 00 00 00 00 00 00               		ALIGNB	16
   135 0000C300                                 GDT0:
   136 0000C300 00 00 00 00 00 00 00 00         		RESB	8				; 初始值
   137 0000C308 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 写32bit位段寄存器
   138 0000C310 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 可执行的文件的32bit寄存器（bootpack用）
   139 0000C318                                 
   140 0000C318 0000                            		DW		0
   141 0000C31A                                 GDTR0:
   142 0000C31A 0017                            		DW		8*3-1
   143 0000C31C 0000C300                        		DD		GDT0
   144 0000C320                                 
   145 0000C320                                 		ALIGNB	16
   146 0000C320                                 
   147 0000C320                                 bootpack:
   148 0000C320                                 
